#用chatgpt生成並修改

import random

citys = [
    (0, 3), (0, 0),
    (0, 2), (0, 1),
    (1, 0), (1, 3),
    (2, 0), (2, 3),
    (3, 0), (3, 3),
    (3, 1), (3, 2)
]


l = len(citys)
path = [(i + 1) % l for i in range(l)]
print("Initial path:", path)


def distance(p1, p2):
    x1, y1 = p1
    x2, y2 = p2
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5


def pathLength(p):
    dist = 0
    plen = len(p)
    for i in range(plen):
        dist += distance(citys[p[i]], citys[p[(i + 1) % plen]])
    return dist

print("Initial path length:", pathLength(path))


def generate_neighbour(p):
    new_p = p[:]
    i, j = random.sample(range(len(p)), 2)
    new_p[i], new_p[j] = new_p[j], new_p[i]
    return new_p


def hill_climbing(citys, max_iterations=1000):
    current_path = list(range(len(citys)))
    random.shuffle(current_path)
    
    current_distance = pathLength(current_path)
    
    for iteration in range(max_iterations):
        neighbour_path = generate_neighbour(current_path)
        neighbour_distance = pathLength(neighbour_path)
        
        if neighbour_distance < current_distance:
            current_path = neighbour_path
            current_distance = neighbour_distance
            
        print(f"Iteration {iteration + 1}: Distance = {current_distance}")
    
    return current_path, current_distance

best_path, best_distance = hill_climbing(citys)
print("最佳路徑:", best_path)
print("最短距離:", best_distance)
